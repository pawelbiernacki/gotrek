#!/usr/local/bin/sdl_chomik


#
# These texts form an "array" to be displayed on the notification window.
#
variable notification text number (R:notification_texts_range) of Gotrek:string;
let notification text number (R:notification_texts_range) of Gotrek = value string " ";

variable notification text coordinate:integer;

variable maximum notification time:integer; # this is used as a "constant", to set the timer for the notification

let maximum notification time = value integer 200;


variable for all (R:notification_texts_range) show them:code;

let for all (R:notification_texts_range) show them=value code
{
    let current notification number = value integer [(R:notification_texts_range)];
    <my show text <my small font index> <notification text number <current notification number> of Gotrek> 80 
        <notification text coordinate>>;
    <add "integer" <notification text coordinate> 16>;
    let notification text coordinate = <the add result "integer">;
};


variable show notifications on (R:compare_result):code;
let show notifications on greater=value code
{    
    <show image <notifications window image index> 50 50>;    
    
    let notification text coordinate = value integer 112;
    
    <for all (R:notification_texts_range) show them>;
};

let show notifications on equal=value code {};
let show notifications on lower=value code {};

variable show notifications:code;
let show notifications=value code
{
    <compare "integer" <Gotrek result timer> 0>;
    <show notifications on <the compare result>>;
};


let notification text number 1 of Gotrek = value string "Welcome to Gotrek - a fantasy game implemented in sdl_chomik";
let notification text number 3 of Gotrek = 
    value string "Your name is Gotrek, you are a dwarf. You are located in one of 5 places.";
    
let notification text number 4 of Gotrek = 
    value string "Apart from you there are some NPCs here: Gerrudir, Gwaigilion and Pregor.";
    
let notification text number 5 of Gotrek = value string "They all choose their decisions randomly. ";
let notification text number 6 of Gotrek = value string "Every time you have a choice of 5 possible decisions generated for you. ";
let notification text number 7 of Gotrek = value string "Feel free to choose the option that is most suitable for you. ";
let notification text number 8 of Gotrek = value string "Your goal is to maximize the amount of points in the game. ";
let notification text number 9 of Gotrek = value string "If you are a liar you are free to tell the NPCs the things ";
let notification text number 10 of Gotrek = value string "that you do not really believe. ";
let notification text number 11 of Gotrek = value string "You can move along the graph edges, depending on where you are. ";

let notification text number 18 of Gotrek = value string "Press arrow keys (up/down) to select an option.";
let notification text number 19 of Gotrek = value string "Press return to activate an option.";
let notification text number 20 of Gotrek = value string "Press SPACE to show this message. ";

variable position of the current notification text:integer;


variable clear notification texts:code;
let clear notification texts=value code
{
    let notification text number (X:notification_texts_range) of Gotrek = value string "";    
    let position of the current notification text=value integer 1;
};

variable prepare printing to the notification texts:code;
let prepare printing to the notification texts=value code
{
    let the print target stream index = <my output stringstream index>;
    let the print end of line=value string "";    
    let the set to stream stream index = <my output stringstream index>;
    <set to stream "">;
};


variable finish printing to the notification texts:code;
let finish printing to the notification texts=value code
{
    let the print target stream index = value integer 0;
    let the print end of line=value string "\n";
};

variable flush printing to the notification texts:code;
let flush printing to the notification texts=value code
{
    let the get from stream stream index = <my output stringstream index>;
    <get from stream>;
    let notification text number <position of the current notification text> of Gotrek = <the get from stream result>;
    
    # increment the position
    <add "integer" <position of the current notification text> 1>;
    let position of the current notification text=<the add result "integer">;
    
    let the set to stream stream index = <my output stringstream index>;
    <set to stream "">;
};


variable notify Gotrek if he should be notified (SHOULD:boolean):code;
let notify Gotrek if he should be notified false=value code {};
let notify Gotrek if he should be notified true=value code
{    
    let Gotrek result timer=<maximum notification time>;
    <print "Gotrek should be notified because <why should Gotrek be notified>>;
};


