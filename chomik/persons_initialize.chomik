#!/usr/local/bin/chomik

variable initialize the person (X:person):code;

let variable initialize the person (A:person) = value code
{
    let current person = value person [(A:person)];

    let the print target stream index = value integer 0;
    let the print end of line = value string "\n";
    let the print separator = value string " ";
    
    <print "initializing" <current person>>;
    
    
    let variable the read from stream source stream index = <my place generator index>;
    <read from stream "place">;
    let variable location of <current person> = <the read from stream result "place">;
    
        
    let variable the read from stream source stream index = <my weapon generator index>;
    <read from stream "weapon">;
    let variable weapon of <current person> = <the read from stream result "weapon">;    

    let variable the read from stream source stream index = <my function generator index>;
    <read from stream "function">;
    let variable function of <current person> = <the read from stream result "function">;    
    
    let variable the read from stream source stream index = <my boolean generator index>;
    <read from stream "boolean">;
    let variable is <current person> a liar = <the read from stream result "boolean">;
    
    
    
    let variable the read from stream source stream index = <my strength generator index>;
    <read from stream "integer">;
    let variable strength of <current person> = <the read from stream result "integer">;

    let variable the read from stream source stream index = <my wisdom generator index>;
    <read from stream "integer">;
    let variable wisdom of <current person> = <the read from stream result "integer">;
    
    
    let variable points of <current person> = value integer 0;

    let the print target stream index = value integer 0;
    let the print end of line = value string "\n";
    let the print separator = value string " ";
        
    <print <current person> "is in" <location of <current person>> "\n">;
    <print <current person> "has" <weapon of <current person>> "\n">;
    <print <current person> "has function" <function of <current person>> "\n">;
    <print <current person> "strength" <strength of <current person>> "\n">;
    <print <current person> "wisdom" <wisdom of <current person>> "\n">;
    <print <current person> "is a liar" <<current person> is a liar> "\n">;
};
 

 
variable initialize the persons:code;

let variable initialize the persons= value code
{
    <initialize the person (X:person)>;    
        
    let variable (X:person) likes (Y:person) = value boolean false;
    let variable (X:person) dislikes (Y:person) = value boolean false;    
        
    <initialize the relationship between persons (A:person) (B:person) (C:person)>;
    <initialize the relationship between persons and functions (A:person) (B:function)>;
    <initialize the persons informations relationships (X:person) (Y:information) (V:boolean)>;
    
    let variable (X:person) has been a no_function = value boolean true;            
};
